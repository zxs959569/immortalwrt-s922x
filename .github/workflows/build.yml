name: ImmortalWrt 24.10 S922X 构建（终极修复版）

on:
  workflow_dispatch:
  push:
    branches: [ main ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 240

    steps:
      - name: 检出仓库
        uses: actions/checkout@v4

      - name: 空间检查 & 清理
        run: |
          df -h
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc
          df -h

      - name: 安装依赖
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y build-essential clang flex bison g++ gawk \
            gcc-multilib gettext git libncurses5-dev libssl-dev \
            python3-setuptools rsync subversion \
            swig unzip zlib1g-dev ccache quilt time

      - name: 克隆 ImmortalWrt
        run: |
          cd $GITHUB_WORKSPACE
          git clone --depth 1 -b openwrt-24.10 \
            https://github.com/immortalwrt/immortalwrt.git openwrt
          cd openwrt
          ls -la ../config/.config || exit 1

      - name: 强制加载 S922X 配置
        run: |
          cd openwrt
          cp ../config/.config .config 2>/dev/null || true
          echo "=== 原始配置 ==="
          grep "TARGET.*meson" .config || echo "无 meson 配置"

          # 强制写入 S922X 目标（防止 defconfig 覆盖）
          cat >> .config <<'EOF'

CONFIG_TARGET_meson=y
CONFIG_TARGET_meson_g12b=y
CONFIG_TARGET_meson_g12b_DEVICE_s922x=y
CONFIG_TARGET_IMAGES-GENERATE_TARGZ=y
CONFIG_TARGET_IMAGES-GENERATE_SYSUPGRADE=n
CONFIG_TARGET_IMAGES-GENERATE_EXT4=n
EOF

          make defconfig
          echo "=== 最终目标 ==="
          grep "TARGET.*meson" .config || { echo "S922X 配置失败！"; exit 1; }

      - name: 下载 u-boot
        run: |
          cd openwrt
          mkdir -p files/u-boot
          wget -q https://raw.githubusercontent.com/immortalwrt/immortalwrt/openwrt-24.10/target/linux/meson/files/u-boot-s922x.bin \
            -O files/u-boot/u-boot-s922x.bin
          ls -lh files/u-boot/

      - name: 更新 & 安装 feeds
        run: |
          cd openwrt
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: 缓存
        uses: actions/cache@v4
        with:
          path: |
            openwrt/dl
            ~/.ccache
          key: cache-${{ runner.os }}-${{ hashFiles('openwrt/feeds.conf.default') }}
          restore-keys: cache-${{ runner.os }}-

      - name: 开始编译
        run: |
          cd openwrt
          export CCACHE_DIR=~/.ccache
          make -j4 V=s 2>&1 | tee build.log || { tail -100 build.log; exit 1; }

      - name: 验证固件路径
        run: |
          echo "=== 固件目录结构 ==="
          ls -R openwrt/bin/targets/ || echo "无 targets 目录"
          find openwrt/bin -name "*.tar.gz" -ls

      - name: 上传 .tar.gz 固件
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: ImmortalWrt-S922X-tar.gz
          path: openwrt/bin/targets/meson/g12b/s922x/*.tar.gz
          retention-days: 7

      - name: 上传日志
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-log
          path: openwrt/build.log
          if-no-files-found: warn
